name: Publish
on:
  push:
    branches: ["main"]
  # Temporary, to test if this workflow works.
  #pull_request:
  #  branches: ["main"]
  workflow_run:
    workflows: ['Build']
    types:
      - completed
jobs:
  publish:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        runtime: [linux-x64, linux-musl-x64, linux-arm64, linux-musl-arm64]
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4.3.1
        with:
          dotnet-version: 8.0.x
      - name: Setup ARM Cross-compile
        run: |
          if [[ ${{ matrix.runtime }} = "linux-x64" || ${{ matrix.runtime }} = "linux-musl-x64" ]]; then
            echo "x64 detected. No need to set these."
            exit 0
          fi
          if [[ $ImageOS == "ubuntu24" ]]; then
            cat <<EOF > deb822sources
          Types: deb
          URIs: https://archive.ubuntu.com/ubuntu/
          Suites: noble
          Components: main restricted universe
          Architectures: amd64

          Types: deb
          URIs: https://security.ubuntu.com/ubuntu/
          Suites: noble-security
          Components: main restricted universe
          Architectures: amd64

          Types: deb
          URIs: https://archive.ubuntu.com/ubuntu/
          Suites: noble-updates
          Components: main restricted universe
          Architectures: amd64

          Types: deb
          URIs: https://azure.ports.ubuntu.com/ubuntu-ports/
          Suites: noble
          Components: main restricted multiverse universe
          Architectures: arm64

          Types: deb
          URIs: https://azure.ports.ubuntu.com/ubuntu-ports/
          Suites: noble-updates
          Components: main restricted multiverse universe
          Architectures: arm64
          EOF
            sudo mv deb822sources /etc/apt/sources.list.d/ubuntu.sources
          else
            sudo mv config/crosscomp-sources.list /etc/apt/sources.list
          fi
          sudo dpkg --add-architecture arm64
      - name: Update System
        run: |
          sudo apt update
          sudo apt upgrade -y
      - name: Install libs
        run:  sudo apt install clang llvm -y
      - name: Install Cross-compile libs
        run: |
            if [[ ${{ matrix.runtime }} = "linux-x64" || ${{ matrix.runtime }} = "linux-musl-x64" ]]; then
                echo "x64 detected. No need to install these."
                exit 0
            fi
             sudo apt install zlib1g-dev:arm64 zlib1g-dev gcc-aarch64-linux-gnu g++-aarch64-linux-gnu binutils-aarch64-linux-gnu -y
      - name: Restore dependencies
        run: dotnet restore
      - name: Publish
        run: |
          if [[ ${{ matrix.runtime }} = "linux-arm64" || ${{ matrix.runtime }} = "linux-musl-arm64" ]]; then
             ADDITONAL_LINKER_ARGS="-p:LinkerFlavor=lld -p:ObjCopyName=aarch64-linux-gnu-objcopy"
          fi
          dotnet publish -c Release -r ${{ matrix.runtime }} $ADDITONAL_LINKER_ARGS -o ./publish/${{ matrix.runtime }}/ ./Gamerun/Gamerun.csproj
          dotnet publish -c Release -r ${{ matrix.runtime }} $ADDITONAL_LINKER_ARGS -o ./publish/${{ matrix.runtime }}/ ./Gamerun.Editor/Gamerun.Editor.csproj
          tar czf ./publish/gamerun-${{ matrix.runtime }}.tar.gz ./publish/${{ matrix.runtime }}/
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Gamerun-${{ matrix.runtime }}
          path: ./publish/gamerun-${{ matrix.runtime }}.tar.gz
