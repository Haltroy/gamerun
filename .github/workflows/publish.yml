name: Publish
on:
  push:
    branches: ["main"]
  # Temporary, to test if this workflow works.
  pull_request:
    branches: ["main"]
  workflow_run:
    workflows: [DevSkim, Build]
    types: [completed]
jobs:
  publish:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        runtime: [linux-x64, linux-musl-x64, linux-arm64, linux-musl-arm64]
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4.1.0
        with:
          dotnet-version: 8.0.x
      - name: Setup DEB822 Repos
        run: |
            sudo dpkg --add-architecture arm64
            sudo bash -c 'cat > /etc/apt/sources.list.d/arm64.list <<EOF
            deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ jammy main restricted
            deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ jammy-updates main restricted
            deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ jammy-backports main restricted universe multiverse
            EOF'
            sudo sed -i -e 's/deb http/deb [arch=amd64] http/g' /etc/apt/sources.list
            sudo sed -i -e 's/deb mirror/deb [arch=amd64] mirror/g' /etc/apt/sources.list
            sudo apt update
            sudo apt upgrade -y
            sudo apt install -y clang llvm binutils-aarch64-linux-gnu gcc-aarch64-linux-gnu zlib1g-dev:arm64
      - name: Restore dependencies
        run: dotnet restore
      - name: Publish
        run: |
          dotnet publish -c Release -r ${{ matrix.runtime }} -o ./publish/${{ matrix.runtime }}/ ./Gamerun/Gamerun.csproj
          dotnet publish -c Release -r ${{ matrix.runtime }} -o ./publish/${{ matrix.runtime }}/ ./Gamerun.Editor/Gamerun.Editor.csproj
          tar czf ./publish/gamerun-${{ matrix.runtime }}.tar.gz ./publish/${{ matrix.runtime }}/
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Gamerun-${{ matrix.runtime }}
          path: ./publish/gamerun-${{ matrix.runtime }}.tar.gz
