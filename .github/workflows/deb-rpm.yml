name: Package

on:
  push:
    branches: ["main"]
  # Temporary, to test if this workflow works.
  pull_request:
    branches: ["main"]
  workflow_run:
    workflows: [Publish]
    types: [Completed]

jobs:
  package:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        runtime: [linux-x64, linux-arm64]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          name: Gamerun-${{ matrix.runtime }}

      - name: Map .NET runtime to package architecture
        id: arch
        run: |
          case "${{ matrix.runtime }}" in
            linux-x64|linux-musl-x64)
              echo "deb_arch=amd64" >> $GITHUB_OUTPUT
              echo "rpm_arch=x86_64" >> $GITHUB_OUTPUT
              ;;
            linux-arm64|linux-musl-arm64)
              echo "deb_arch=arm64" >> $GITHUB_OUTPUT
              echo "rpm_arch=aarch64" >> $GITHUB_OUTPUT
              ;;
            *)
              echo "Unknown runtime: ${{ matrix.runtime }}"
              exit 1
              ;;
          esac

      - name: Extract tar.gz artifacts
        run: |
          mkdir -p extracted/Gamerun
          mkdir -p extracted/Gamerun.Editor
          tar -xzf artifacts/Gamerun.tar.gz -C extracted/Gamerun
          tar -xzf artifacts/Gamerun.Editor.tar.gz -C extracted/Gamerun.Editor

      - name: Install fpm
        run: |
          sudo apt-get update
          sudo apt-get install -y ruby ruby-dev gcc make rpm
          sudo gem install --no-document fpm

      - name: Prepare package layout
        run: |
          mkdir -p pkgroot/usr/bin
          mkdir -p pkgroot/usr/lib/gamerun

          # Copy Gamerun executable
          cp extracted/Gamerun/Gamerun pkgroot/usr/bin/
          chmod +x pkgroot/usr/bin/gamerun

          # Copy Gamerun-editor + dlls
          cp extracted/Gamerun.Editor/gamerun-editor pkgroot/usr/lib/gamerun/
          cp extracted/Gamerun.Editor/*.so pkgroot/usr/lib/gamerun/
          chmod +x pkgroot/usr/lib/gamerun/gamerun-editor

          # Wrapper script
          cat <<'EOF' > pkgroot/usr/bin/gamerun-editor
          #!/bin/sh
          exec /usr/lib/gamerun/gamerun-editor "$@"
          EOF
          chmod +x pkgroot/usr/bin/gamerun-editor

      - name: Build .deb and .rpm
        run: |
          VERSION=1.0.0
          ARCH=${{ steps.arch.outputs.deb_arch }}
          PKGNAME="Gamerun-${ARCH}"

          fpm -s dir -t deb -n "$PKGNAME" -v $VERSION -a ${{ steps.arch.outputs.deb_arch }} -C pkgroot .
          fpm -s dir -t rpm -n "$PKGNAME" -v $VERSION -a ${{ steps.arch.outputs.rpm_arch }} -C pkgroot .

      - name: Upload packages
        uses: actions/upload-artifact@v4
        with:
          name: packages-${{ matrix.runtime }}
          path: ./*.{deb,rpm}
